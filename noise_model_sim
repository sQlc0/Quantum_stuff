from qiskit import IMBQ, transpile
from qiskit import QuantumCircuit
from qiskit.providers.aer import AerSimulator
from qiskit.tools.visualization import plot_histogram
from qiskit.test.mock. import FakeVigo


dev_backend = FakeVigo()

#circuit

qc = QuantumCircuit(3,3)
qc.h(0)
qc.cx(0,1)
qc.cx(1,2)
qc.measure([0,1,2],[0,1,2])

sim_ideal = AerSimulator()

#execute& get counts

result = sim_ideal.run(transpile(qc, sim_ideal)).result()
counts = results.get_counts(0)
plot_histogram(counts, title='Ideal Counts for 3 qubit GHZ state')

#Generating sim that mimics noise

simvigo = AerSimulator.from_backend(device_backend)

#transpile the circuit for the noisy basis gate

tqc = transpile(qc, simvigo)

#execute noisy sim and get counts

result_noise = simvigo.run(tqc).result()
countnoise = result_noise.get_counts(0)
plot_histogram(counts_noise,
                title='counts for 3 qubit GHZ state with device noise model")
                
